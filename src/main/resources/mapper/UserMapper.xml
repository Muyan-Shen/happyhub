<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.shenmuyan.mapper.UserMapper">

    <resultMap id="BaseResultMap" type="cn.shenmuyan.bean.User">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="username" column="username" jdbcType="VARCHAR"/>
            <result property="email" column="email" jdbcType="VARCHAR"/>
            <result property="passwordHash" column="password_hash" jdbcType="VARCHAR"/>
            <result property="createdAt" column="created_at" jdbcType="TIMESTAMP"/>
            <result property="updatedAt" column="updated_at" jdbcType="TIMESTAMP"/>
            <result property="isDelete" column="is_delete" jdbcType="OTHER"/>
        <collection property="roles" ofType="cn.shenmuyan.bean.Role"
                    column="id" select="cn.shenmuyan.mapper.RoleMapper.selectByUserId"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,username,email,
        password_hash,created_at,updated_at,
        is_delete
    </sql>

    <select id="selectByPrimaryKey"  resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from user
        where  id = #{id,jdbcType=INTEGER} 
    </select>
    <select id="selectAll"  resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from user
        <where>
            <if test="username!=null and username !=''">
                and username like concat('%',#{username,jdbcType=VARCHAR},'%')
            </if>
            <if test="email !=null">
                and email = #{status,jdbcType=TINYINT}
            </if>
            <if test="createdAt !=null and createTime.length>0">
                <if test="createdAt[0] !=null">
                    and create_time &gt;= #{createTime[0],javaType=java.time.LocalDate,jdbcType=TIMESTAMP}
                </if>
                <if test="createdAt[1] !=null and createTime.length>1 ">
                    and create_time &lt;= #{createTime[1],javaType=java.time.LocalDate,jdbcType=TIMESTAMP}
                </if>
            </if>
            <if test="updatedAt !=null and updateTime.length>0">
                <if test="updatedAt[0] !=null">
                    and update_time &gt;= #{updateTime[0],javaType=java.time.LocalDate,jdbcType=TIMESTAMP}
                </if>
                <if test="updatedAt[1] !=null and updateTime.length>1 ">
                    and update_time &lt;= #{updateTime[1],javaType=java.time.LocalDate,jdbcType=TIMESTAMP}
                </if>
            </if>
            <if test="isDelete !=null">
                  and is_delete = #{isDelete,jdbcType=ENUM}
            </if>
        </where>
    </select>
    <select id="selectByUsernameAndPasswordHash" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where username = #{username,jdbcType=VARCHAR}
        and password_hash = #{passwordHash,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from user
        where  id = #{id,jdbcType=INTEGER} 
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.shenmuyan.bean.User" useGeneratedKeys="true">
        insert into user
        ( id,username,email
        ,password_hash,created_at,updated_at
        ,is_delete)
        values (#{id,jdbcType=INTEGER},#{username,jdbcType=VARCHAR},#{email,jdbcType=VARCHAR}
        ,#{passwordHash,jdbcType=VARCHAR},#{createdAt,jdbcType=TIMESTAMP},#{updatedAt,jdbcType=TIMESTAMP}
        ,#{isDelete,jdbcType=OTHER})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cn.shenmuyan.bean.User" useGeneratedKeys="true">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="username != null">username,</if>
                <if test="email != null">email,</if>
                <if test="passwordHash != null">password_hash,</if>
                <if test="createdAt != null">created_at,</if>
                <if test="updatedAt != null">updated_at,</if>
                <if test="isDelete != null">is_delete,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id,jdbcType=INTEGER},</if>
                <if test="username != null">#{username,jdbcType=VARCHAR},</if>
                <if test="email != null">#{email,jdbcType=VARCHAR},</if>
                <if test="passwordHash != null">#{passwordHash,jdbcType=VARCHAR},</if>
                <if test="createdAt != null">#{createdAt,jdbcType=TIMESTAMP},</if>
                <if test="updatedAt != null">#{updatedAt,jdbcType=TIMESTAMP},</if>
                <if test="isDelete != null">#{isDelete,jdbcType=OTHER},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.shenmuyan.bean.User">
        update user
        <set>
                <if test="username != null">
                    username = #{username,jdbcType=VARCHAR},
                </if>
                <if test="email != null">
                    email = #{email,jdbcType=VARCHAR},
                </if>
                <if test="passwordHash != null">
                    password_hash = #{passwordHash,jdbcType=VARCHAR},
                </if>
                <if test="createdAt != null">
                    created_at = #{createdAt,jdbcType=TIMESTAMP},
                </if>
                <if test="updatedAt != null">
                    updated_at = #{updatedAt,jdbcType=TIMESTAMP},
                </if>
                <if test="isDelete != null">
                    is_delete = #{isDelete,jdbcType=OTHER},
                </if>
        </set>
        where   id = #{id,jdbcType=INTEGER} 
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.shenmuyan.bean.User">
        update user
        set 
            username =  #{username,jdbcType=VARCHAR},
            email =  #{email,jdbcType=VARCHAR},
            password_hash =  #{passwordHash,jdbcType=VARCHAR},
            created_at =  #{createdAt,jdbcType=TIMESTAMP},
            updated_at =  #{updatedAt,jdbcType=TIMESTAMP},
            is_delete =  #{isDelete,jdbcType=OTHER}
        where   id = #{id,jdbcType=INTEGER} 
    </update>
</mapper>
